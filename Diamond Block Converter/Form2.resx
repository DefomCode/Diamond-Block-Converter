<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="notifyIcon1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox4.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAgEAYABgAAD/4QByRXhpZgAATU0AKgAAAAgAAYdpAAQAAAABAAAAGgAAAAAAAZKG
        AAcAAAA8AAAALAAAAABTAFkAUwBUAEUATQBBAFgAIABKAEYASQBGACAARQBuAGMAbwBkAGUAcgAgAFYA
        ZQByAC4AMgAuADAAAAAAAP/bAEMAAQEBAQEBAgICAgICAgICAgICAgICAwMDAwMDAwMDAwMDAwMDBAQE
        BAQEBAQEBAQEBAUFBQUFBQUFBQYGBgcHB//bAEMBAwMDAwMDBAQEBAQEBAQEBQUFBQUFBwcHBwcHBwgI
        CAgICAgICgoKCgoKCgsLCwsLCw0NDQ0NDw8PDw8PDw8PD//AABEIAEwATwMBEQACEQEDEQH/xAAfAAAB
        BQEBAQEBAQAAAAAAAAAAAQIDBAUGBwgJCgv/xAC1EAACAQMDAgQDBQUEBAAAAX0BAgMABBEFEiExQQYT
        UWEHInEUMoGRoQgjQrHBFVLR8CQzYnKCCQoWFxgZGiUmJygpKjQ1Njc4OTpDREVGR0hJSlNUVVZXWFla
        Y2RlZmdoaWpzdHV2d3h5eoOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK
        0tPU1dbX2Nna4eLj5OXm5+jp6vHy8/T19vf4+fr/xAAfAQADAQEBAQEBAQEBAAAAAAAAAQIDBAUGBwgJ
        Cgv/xAC1EQACAQIEBAMEBwUEBAABAncAAQIDEQQFITEGEkFRB2FxEyIygQgUQpGhscEJIzNS8BVictEK
        FiQ04SXxFxgZGiYnKCkqNTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqCg4SFhoeI
        iYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2dri4+Tl5ufo6ery8/T1
        9vf4+fr/3QAEACj/2gAMAwEAAhEDEQA/AP1Z/bC/bw+EX7E//COHxVpviTUf+Em/tj7B/wAI/ZWU/l/2
        f9j8/wA/7bfW2z/j7i8ry/M+6/3KAPir/h+9+yJ/0LnxI/8ABRon/wA0NAB/w/e/ZE/6Fz4kf+CjRP8A
        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
</value>
  </data>
</root>